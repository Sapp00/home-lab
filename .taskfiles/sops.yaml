---
version: "3"

vars:
  TARGET_PATH: '~/.sops'
  TARGET_FILE: "{{.TARGET_PATH}}/key.txt"
  SOPS_NAMESPACES: "traefik,argocd,monitoring"
  CONFIG_PATH: "{{.PROJECT_DIR}}/cluster/.sops.yaml"
  ENCRYPTED_KEYS: "data|stringData" # separate by |

tasks:

  init:
    vars:
      TEMP_FILE:
        sh: mktemp -u
    cmds:
      - age-keygen -o {{.TEMP_FILE}}
      - mkdir -p {{.TARGET_PATH}}
      - mv {{.TEMP_FILE}} {{.TARGET_FILE}}
      - chmod 400 {{.TARGET_FILE}}
      - |
        PUBLIC_KEY=$(grep 'public key:' {{.TARGET_FILE}} | awk -F: '{print $(NR)}')
      - echo "Add 'export SOPS_AGE_KEY_FILE={{.TARGET_FILE}}' to your shell initialization script and reload"
      - echo "Don't forget to BACK IT UP!"
    preconditions:
      - sh: "[ ! -f {{.TARGET_FILE}} ]"
        msg: "Sops key already exists!"

  encrypt:
    desc: encrypt sops file 'to use must include -- before path to file.' eg "task sops:encrypt -- file.yml"
    cmds:
      - |
        sops --encrypt --age $(cat ~/.sops/key.txt |grep -oP "public key: \K(.*)") --in-place --encrypted-regex '^({{.ENCRYPTED_KEYS}})$' {{.CLI_ARGS}}

  decrypt:
    desc: decrypt sops file 'to use must include -- before path to file.'  eg "task sops:decrypt -- file.yml"
    cmds:
      - sops --decrypt --in-place {{.CLI_ARGS}}

  edit:
    desc: decrypt sops file 'to use must include -- before path to file.'  eg "task sops:decrypt -- file.yml"
    cmds:
      - sops {{.CLI_ARGS}}

  create-kube-secret:
    desc: create a kubernetes secret based on a local AGE key
    cmds:
      - |
        cat {{.TARGET_FILE}} | kubectl create secret generic sops-age --namespace=cert-manager --from-file=key.txt=/dev/stdin
        kubectl annotate secret sops-age --namespace=cert-manager reflector.v1.k8s.emberstack.com/reflection-allowed="true"
        kubectl annotate secret sops-age --namespace=cert-manager reflector.v1.k8s.emberstack.com/reflection-allowed-namespaces="{{.SOPS_NAMESPACES}}}"
        kubectl annotate secret sops-age --namespace=cert-manager reflector.v1.k8s.emberstack.com/reflection-auto-enabled="true"
        kubectl annotate secret sops-age --namespace=cert-manager reflector.v1.k8s.emberstack.com/reflection-auto-namespaces="{{.SOPS_NAMESPACES}}}"

  delete-kube-secret:
    desc: deletes the kubernetes secret based on a local AGE key
    cmds:
      - kubectl delete secret sops-age --namespace=cert-manager
